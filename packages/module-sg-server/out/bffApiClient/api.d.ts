/**
 * sg-server
 * api for ssg
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface HomeGETRes
 */
export interface HomeGETRes {
    /**
     *
     * @type {Array<string>}
     * @memberof HomeGETRes
     */
    'mainVisualPaths': Array<string>;
}
/**
 *
 * @export
 * @interface PhotoGalleryGETRes
 */
export interface PhotoGalleryGETRes {
    /**
     *
     * @type {Array<PhotoGalleryGETResCardsInner>}
     * @memberof PhotoGalleryGETRes
     */
    'cards': Array<PhotoGalleryGETResCardsInner>;
}
/**
 *
 * @export
 * @interface PhotoGalleryGETResCardsInner
 */
export interface PhotoGalleryGETResCardsInner {
    /**
     *
     * @type {string}
     * @memberof PhotoGalleryGETResCardsInner
     */
    'imagePath': string;
    /**
     *
     * @type {PhotoGalleryGETResCardsItemsLocation}
     * @memberof PhotoGalleryGETResCardsInner
     */
    'location': PhotoGalleryGETResCardsItemsLocation;
    /**
     *
     * @type {PhotoGalleryGETResCardsItemsTakenAt}
     * @memberof PhotoGalleryGETResCardsInner
     */
    'takenAt': PhotoGalleryGETResCardsItemsTakenAt;
    /**
     *
     * @type {Array<PhotoGalleryGETResCardsItemsTagsInner>}
     * @memberof PhotoGalleryGETResCardsInner
     */
    'tags': Array<PhotoGalleryGETResCardsItemsTagsInner>;
}
/**
 *
 * @export
 * @interface PhotoGalleryGETResCardsItemsLocation
 */
export interface PhotoGalleryGETResCardsItemsLocation {
    /**
     *
     * @type {string}
     * @memberof PhotoGalleryGETResCardsItemsLocation
     */
    'locationId': string;
    /**
     *
     * @type {string}
     * @memberof PhotoGalleryGETResCardsItemsLocation
     */
    'locationName': string;
}
/**
 *
 * @export
 * @interface PhotoGalleryGETResCardsItemsTagsInner
 */
export interface PhotoGalleryGETResCardsItemsTagsInner {
    /**
     *
     * @type {string}
     * @memberof PhotoGalleryGETResCardsItemsTagsInner
     */
    'tagId': string;
    /**
     *
     * @type {string}
     * @memberof PhotoGalleryGETResCardsItemsTagsInner
     */
    'tagName': string;
}
/**
 *
 * @export
 * @interface PhotoGalleryGETResCardsItemsTakenAt
 */
export interface PhotoGalleryGETResCardsItemsTakenAt {
    /**
     *
     * @type {string}
     * @memberof PhotoGalleryGETResCardsItemsTakenAt
     */
    'yearMonth': string;
    /**
     *
     * @type {string}
     * @memberof PhotoGalleryGETResCardsItemsTakenAt
     */
    'viewTakenAt': string;
}
/**
 * SGApi - axios parameter creator
 * @export
 */
export declare const SGApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * for top page
     * @summary Get Main Visual Paths
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiHome: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * for photo-gallery page
     * @summary Get all photos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiPhotoGallery: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SGApi - functional programming interface
 * @export
 */
export declare const SGApiFp: (configuration?: Configuration) => {
    /**
     * for top page
     * @summary Get Main Visual Paths
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiHome(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HomeGETRes>>;
    /**
     * for photo-gallery page
     * @summary Get all photos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiPhotoGallery(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PhotoGalleryGETRes>>;
};
/**
 * SGApi - factory interface
 * @export
 */
export declare const SGApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * for top page
     * @summary Get Main Visual Paths
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiHome(options?: any): AxiosPromise<HomeGETRes>;
    /**
     * for photo-gallery page
     * @summary Get all photos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiPhotoGallery(options?: any): AxiosPromise<PhotoGalleryGETRes>;
};
/**
 * SGApi - interface
 * @export
 * @interface SGApi
 */
export interface SGApiInterface {
    /**
     * for top page
     * @summary Get Main Visual Paths
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SGApiInterface
     */
    getApiHome(options?: AxiosRequestConfig): AxiosPromise<HomeGETRes>;
    /**
     * for photo-gallery page
     * @summary Get all photos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SGApiInterface
     */
    getApiPhotoGallery(options?: AxiosRequestConfig): AxiosPromise<PhotoGalleryGETRes>;
}
/**
 * SGApi - object-oriented interface
 * @export
 * @class SGApi
 * @extends {BaseAPI}
 */
export declare class SGApi extends BaseAPI implements SGApiInterface {
    /**
     * for top page
     * @summary Get Main Visual Paths
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SGApi
     */
    getApiHome(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<HomeGETRes, any>>;
    /**
     * for photo-gallery page
     * @summary Get all photos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SGApi
     */
    getApiPhotoGallery(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PhotoGalleryGETRes, any>>;
}
